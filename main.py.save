import discord
from discord.ext import commands
from Util import Logging
import DBHandler

def get_prefix(bot, message):
    if not message.guild:
        return '$'

    # If we are in a guild, we allow for the user to mention us or use any of the prefixes in our list.
    return commands.when_mentioned_or(DBHandler.get_server_prefix(message.guild.id))(bot, message)


bot = commands.Bot(command_prefix=get_prefix)

extensions = ['admin', 'setup', 'fun']

@bot.event
async def on_ready():
    print('logged in as {0.user}'.format(bot))

@bot.event
async def on_guild_join(guild):
    await Logging.AdminLog(bot, "Joined server by name **{}** ({})".format(sanitize(guild.name), guild.id))

@bot.event
async def on_guild_remove(guild):
    await Logging.AdminLog(bot, "Left server by name **{}** ({})".format(sanitize(guild.name), guild.id))
    DBHandler.delete_server(guild.id)

@bot.event
async def on_guild_update(before, after):
	DBHandler.update_guild_name(before.id, after.name)
	print("Updating guild name")

#user
@bot.command()
async def about(ctx):
	members = 0
	for guild in bot.guilds:
		members += len(guild.members)
	embed = discord.Embed(title="About Catblushbot", description="Serving {} members in {} guilds".format(members, len(bot.guilds)))
	await ctx.send(embed=embed)

@bot.event
async def on_message(message):
    if ":catblush:" in message.content and message.channel.id == 565143658156785684:
        await message.author.add_roles(discord.utils.get(message.guild.roles, name="Movie Fren :catblush:"))
    ctx: commands.Context = await bot.get_context(message)
    await bot.invoke(ctx)

@bot.event
async def on_message_delete(message):
    embed = discord.Embed(description=message.content, color=0xff0000)
    await Logging.MessageLogs(bot,
                              message.guild.id,
                              ":x: **{}** ({})'s message has been deleted from <#{}>:"
                              .format(sanitize(message.author.name), message.author.id, message.channel.id),
                              embed
                              )

def sanitize(msg: str):
    return discord.utils.escape_markdown(discord.utils.escape_mentions(msg))

if __name__ == '__main__':
    for extension in extensions:
        try:
            bot.load_extension(extension)
        except Exception as error:
            print('{} cannot be loaded. [{}]'.format(extension, error))

bot.run('MzI5NjEwMTI2NDM0NzYyNzUy.XLt12A.rjemqvZPU2zMxCqyc6UNx4pciJs')
